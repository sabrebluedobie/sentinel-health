// @ts-nocheck
import fetch from"node-fetch";import{createClient}from"@supabase/supabase-js";const supabase=createClient(process.env.SUPABASE_URL,process.env.SUPABASE_SERVICE_ROLE_KEY);export default async function handler(e,t){try{const o=e.query.code,r=e.query.uid,s=process.env.DEXCOM_BASE||"https://sandbox-api.dexcom.com",n=await fetch(`${s}/v2/oauth2/token`,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({client_secret:process.env.DEXCOM_CLIENT_SECRET,client_id:process.env.DEXCOM_CLIENT_ID,code:o,grant_type:"authorization_code",redirect_uri:process.env.DEXCOM_REDIRECT_URI})}).then((e=>e.json()));if(!n.access_token)return t.status(400).json(n);await supabase.from("oauth_tokens").upsert({user_id:r,provider:"dexcom",access_token:n.access_token,refresh_token:n.refresh_token||null,expires_at:n.expires_in?new Date(Date.now()+1e3*n.expires_in).toISOString():null},{onConflict:"user_id,provider"}),await supabase.from("cgm_connections").upsert({user_id:r,provider:"dexcom",status:"active"},{onConflict:"user_id,provider"}),t.redirect("/dashboard?connected=dexcom")}catch(e){t.status(500).json({error:String(e)})}}