// @ts-nocheck
import{createClient}from"@supabase/supabase-js";import crypto from"node:crypto";function normalizeBaseUrl(t){if(!t)return null;let e=String(t).trim();return/^https?:\/\//i.test(e)||(e="https://"+e),e.replace(/\/+$/,"")}export default async function handler(t,e){try{if("POST"!==t.method)return e.status(405).json({error:"Method not allowed"});const r=t.headers.authorization||"";if(!r.startsWith("Bearer "))return e.status(401).json({error:"Missing Authorization Bearer token"});const s=process.env.SUPABASE_URL||process.env.VITE_SUPABASE_URL,n=process.env.SUPABASE_ANON_KEY||process.env.VITE_SUPABASE_ANON_KEY,o=process.env.NS_TOKEN_KEY;if(!s||!n)return e.status(500).json({error:"Supabase env not set"});if(!o)return e.status(500).json({error:"NS_TOKEN_KEY not set"});const a=createClient(s,n,{global:{headers:{Authorization:r}}}),{data:i}=await a.auth.getUser(),u=i?.user?.id;if(!u)return e.status(401).json({error:"Invalid user session"});const{error:c}=await a.rpc("set_app_key",{k:"app.ns_token_key",v:o});if(c)return e.status(500).json({error:`set_app_key: ${c.message}`});const{data:l,error:d}=await a.rpc("get_ns_conn");if(d)return e.status(500).json({error:`get_ns_conn: ${d.message}`});const p=l?.[0];if(!p?.ns_url)return e.status(200).json({inserted:0,reason:"no-connection"});const _=normalizeBaseUrl(p.ns_url);if(!_)return e.status(400).json({error:"Invalid Nightscout URL"});const g={Accept:"application/json","User-Agent":"sentinel-sync"},f=new URL(`${_}/api/v1/entries/sgv.json`);f.searchParams.set("count","1000"),p.token_read?f.searchParams.set("token",p.token_read):p.token_sha1&&(g["api-secret"]=String(p.token_sha1).toLowerCase());const h=await fetch(`${_}/api/v1/status.json`,{headers:g});if(!h.ok)return e.status(502).json({error:"Nightscout status failed",status:h.status});const S=await fetch(f.toString(),{headers:g}),m=await S.text();if(!S.ok)return e.status(502).json({error:"Nightscout entries failed",status:S.status});let j=[];try{const t=JSON.parse(m);j=Array.isArray(t)?t:[]}catch{return e.status(502).json({error:"Invalid JSON from Nightscout"})}const v=j.filter((t=>Number.isFinite(t?.sgv)&&(t?.date||t?.dateString))).map((t=>{const e="string"==typeof t.dateString&&t.dateString.includes("T")?new Date(t.dateString).toISOString():new Date(Number(t.date)).toISOString();return{user_id:u,device_time:e,value_mgdl:t.sgv,trend:t.direction??null,source:"nightscout",reading_type:null,note:null,timezone_offset_min:null,created_at:(new Date).toISOString()}}));if(!v.length)return e.status(200).json({inserted:0,message:"No rows to insert."});const{error:N}=await a.from("glucose_readings").upsert(v,{onConflict:"user_id,device_time,source",ignoreDuplicates:!0});return N?e.status(500).json({error:"Supabase upsert failed"}):e.status(200).json({inserted:v.length})}catch(t){return e.status(500).json({error:t?.message||"Internal error"})}}