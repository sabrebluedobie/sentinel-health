// @ts-nocheck
import crypto from"node:crypto";import{createClient}from"@supabase/supabase-js";const URL=process.env.NEXT_PUBLIC_SUPABASE_URL||process.env.VITE_SUPABASE_URL,SRV=process.env.SUPABASE_SERVICE_ROLE_KEY;function send(e,t,r){e.status(t).setHeader("Content-Type","application/json"),e.send(JSON.stringify(r))}function sha1Hex(e){return crypto.createHash("sha1").update(e).digest("hex")}function nsBase(e){return String(e||"").replace(/\/+$/,"")}export default async function handler(e,t){try{if(!URL||!SRV)return send(t,500,{ok:!1,error:"Supabase not configured"});const r=createClient(URL,SRV,{auth:{persistSession:!1}}),n="GET"===e.method?e.query:"object"==typeof e.body?e.body:{},s=n.user_id,o=Math.max(1,Math.min(90,Number(n.lookback_days||7)));if(!s)return send(t,400,{ok:!1,error:"Missing user_id"});const{data:i,error:a}=await r.from("nightscout_connections").select("url, token, api_secret").eq("user_id",s).maybeSingle();if(a)return send(t,500,{ok:!1,error:`DB error: ${a.message}`});if(!i?.url)return send(t,404,{ok:!1,error:"No Nightscout URL saved"});const{data:c,error:d}=await r.from("glucose_readings").select("device_time").eq("user_id",s).order("device_time",{ascending:!1}).limit(1).maybeSingle();let u=new Date(Date.now()-864e5*o).toISOString();if(!d&&c?.device_time){const e=new Date(c.device_time).getTime();isFinite(e)&&(u=new Date(e-3e5).toISOString())}const g=nsBase(i.url),l=new URLSearchParams;l.set("count","1000"),l.set("find[dateString][$gte]",u),i.token&&l.set("token",i.token);const p={};!i.token&&i.api_secret&&(p["api-secret"]=sha1Hex(i.api_secret));const m=`${g}/api/v1/entries/sgv.json?${l.toString()}`,S=await fetch(m,{headers:p}),_=await S.text();if(!S.ok)return send(t,502,{ok:!1,error:`Nightscout error ${S.status}: ${_.slice(0,280)}`});let f;try{f=JSON.parse(_)}catch{return send(t,502,{ok:!1,error:`Nightscout non-JSON response: ${_.slice(0,280)}`})}Array.isArray(f)||(f=[]);const h=f.map((e=>{const t=e.dateString||e.date||e._id,r=Number(e.sgv);return t&&isFinite(r)?{user_id:s,device_time:new Date(t).toISOString(),value_mgdl:Math.round(r),trend:e.direction||e.trend||null,source:"nightscout",note:null}:null})).filter(Boolean);if(!h.length)return send(t,200,{ok:!0,imported:0});const{error:k}=await r.from("glucose_readings").upsert(h,{onConflict:"user_id,device_time",ignoreDuplicates:!1});return k?send(t,500,{ok:!1,error:`Upsert error: ${k.message}`}):send(t,200,{ok:!0,imported:h.length})}catch(e){return send(t,500,{ok:!1,error:e?.message||String(e)})}}