// @ts-nocheck
export default async function handler(r,e){if("POST"!==r.method)return e.status(405).json({ok:!1,error:"Method not allowed"});const{createClient:t}=await import("@supabase/supabase-js"),s=process.env.NEXT_PUBLIC_SUPABASE_URL,o=process.env.SUPABASE_SERVICE_ROLE_KEY;if(!s||!o)return e.status(500).json({ok:!1,error:"Missing Supabase env vars"});const n=t(s,o);try{const{user_id:t,source:s,type:o,start_time:a,end_time:u,value:i,unit:l,raw:c}=r.body||{};if(!(t&&s&&o&&a))return e.status(400).json({ok:!1,error:"Missing required fields"});const{error:d}=await n.from("health_readings").insert([{user_id:t,source:s,type:o,start_time:a,end_time:u||null,value:i??null,unit:l||null,raw:c??null}]);if(d)throw d;return e.status(200).json({ok:!0})}catch(r){return console.error(r),e.status(500).json({ok:!1,error:"Server error"})}}