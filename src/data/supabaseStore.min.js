// @ts-nocheck
import supabase from"@/lib/supabase";export const SleepData={async create(e){const{data:t,error:a}=await supabase.from("sleep_data").insert([e]).select().single();if(a)throw a;return t},async summary(e,t=7){const a=new Date(Date.now()-864e5*t).toISOString();let i=supabase.from("sleep_data").select("start_time,end_time,efficiency").gte("start_time",a).order("start_time",{ascending:!0}).limit(5e3);e&&(i=i.eq("user_id",e));const{data:s,error:n}=await i;if(n)throw n;let r=0,o=0,c=0;for(const e of s??[]){if(e.start_time&&e.end_time){const t=(new Date(e.end_time)-new Date(e.start_time))/6e4;isFinite(t)&&t>0&&(r+=t)}if(null!=e.efficiency){const t=Number(e.efficiency);isFinite(t)&&(o+=t,c++)}}return{totalSleepMinutes:Math.round(r),avgEfficiency:c?o/c:null,count:(s??[]).length}},async listByDayRange(e,t=7,a=200){const i=new Date(Date.now()-864e5*t).toISOString();let s=supabase.from("sleep_data").select("*").gte("start_time",i).order("start_time",{ascending:!1}).limit(a);e&&(s=s.eq("user_id",e));const{data:n,error:r}=await s;if(r)throw r;return n??[]}};