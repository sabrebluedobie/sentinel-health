// @ts-nocheck
import{useEffect,useState}from"react";import supabase from"../lib/supabase";import{useAuth}from"../components/AuthContext";export function useMigraineData({days:e=30}={}){const{user:t}=useAuth(),[a,s]=useState([]),[n,i]=useState([]),[o,r]=useState(!0),[u,c]=useState("");return useEffect((()=>{if(!t)return void r(!1);const a=new Date;a.setDate(a.getDate()-e);let n=!1;async function o(){r(!0);const{data:e,error:o}=await supabase.from("migraine_episodes").select("id, created_at, pain, symptoms, notes").eq("user_id",t.id).gte("created_at",a.toISOString()).order("created_at",{ascending:!0});if(n)return;if(o)return c(o.message||"Failed to fetch migraine data"),void r(!1);const u=(e||[]).map((e=>({id:e.id,time:new Date(e.created_at),pain:null==e.pain?null:Number(e.pain),symptoms:Array.isArray(e.symptoms)?e.symptoms:[],notes:e.notes||""}))),m=new Map;for(const e of u){const t=e.time.toISOString().slice(0,10),a=m.get(t)||{date:t,count:0,totalPain:0,withPain:0};a.count+=1,Number.isFinite(e.pain)&&(a.totalPain+=e.pain,a.withPain+=1),m.set(t,a)}const d=[...m.values()].sort(((e,t)=>e.date.localeCompare(t.date))).map((e=>({date:e.date,count:e.count,avgPain:e.withPain?+(e.totalPain/e.withPain).toFixed(1):0})));s(u),i(d),r(!1)}o();const u=supabase.channel("migraine_changes").on("postgres_changes",{event:"INSERT",schema:"public",table:"migraine_episodes",filter:`user_id=eq.${t.id}`},(()=>o())).subscribe();return()=>{n=!0,supabase.removeChannel(u)}}),[t,e]),{entries:a,byDay:n,loading:o,error:u}}