// @ts-nocheck
import supabase from"@/lib/supabase.js";export async function getConnections(t){if(!t)return{};const{data:e,error:o}=await supabase.from("cgm_connections").select("provider,status").eq("user_id",t);if(o)return{};const r={};return(e||[]).forEach((t=>{r[t.provider]="active"===t.status})),r}export async function upsertNightscout(t,e,o){const{error:r}=await supabase.from("cgm_connections").upsert({user_id:t,provider:"nightscout",status:"active",url:e,token:o},{onConflict:"user_id,provider"});if(r)throw r;return!0}export async function pullNightscoutNow(t,e,o){const r=new URLSearchParams({uid:t,url:e,token:o||""}),n=await fetch(`/api/cgm/nightscout/pull?${r.toString()}`),s=await n.json().catch((()=>({})));if(!n.ok)throw new Error(`Nightscout pull failed (${n.status}): ${s?.error||"Unknown"}${s?.details?" â€” "+String(s.details).slice(0,200):""}`);return s}export function startDexcomOAuth(t){window.location.href=`/api/cgm/dexcom/start?uid=${encodeURIComponent(t)}&state=${encodeURIComponent("")}`}export async function disconnectProvider(t,e){await supabase.from("cgm_connections").delete().eq("user_id",t).eq("provider",e),await supabase.from("oauth_tokens").delete().eq("user_id",t).eq("provider",e)}