// @ts-nocheck
import{createClient}from"@supabase/supabase-js";import crypto from"node:crypto";const SUPABASE_URL=process.env.VITE_SUPABASE_URL||process.env.NEXT_PUBLIC_SUPABASE_URL||process.env.SUPABASE_URL,SERVICE_ROLE=process.env.SUPABASE_SERVICE_ROLE_KEY,sb=SUPABASE_URL&&SERVICE_ROLE?createClient(SUPABASE_URL,SERVICE_ROLE):null;function send(e,t,r,n={}){for(const[t,r]of Object.entries(n))e.setHeader(t,r);e.status(t).send("string"==typeof r?r:JSON.stringify(r))}async function readBody(e){return"GET"===e.method||"HEAD"===e.method?{}:e.body&&"object"==typeof e.body?e.body:new Promise(((t,r)=>{let n="";e.on("data",(e=>n+=e)),e.on("end",(()=>{if(!n)return t({});try{t(JSON.parse(n))}catch{t({raw:n})}})),e.on("error",r)}))}function b64urlDecode(e){const t=(e=e.replace(/-/g,"+").replace(/_/g,"/")).length%4;return t&&(e+="=".repeat(4-t)),Buffer.from(e,"base64").toString("utf8")}function getUserIdFromReq(e){const t=(e.headers.authorization||"").match(/^Bearer\s+(.+)$/i);if(!t)return null;try{const[,e]=t[1].split("."),r=JSON.parse(b64urlDecode(e));return r.sub||r.user_id||null}catch{return null}}function apiSecretHeader(e){if(!e)return{};return{"API-SECRET":crypto.createHash("sha1").update(e).digest("hex")}}function withToken(e,t){if(!t)return e;const r=new URL(e);return r.searchParams.set("token",t),r.toString()}async function nsSave(e,t){if(!sb)return send(t,500,{ok:!1,error:"Supabase not configured"});const r=getUserIdFromReq(e);if(!r)return send(t,401,{ok:!1,error:"No auth"});const{url:n,token:o=null,api_secret:s=null}=await readBody(e);if(!n||!/^https?:\/\//i.test(n))return send(t,400,{ok:!1,error:"Valid Nightscout URL required"});const a={user_id:r,url:n,token:o,api_secret:s,updated_at:(new Date).toISOString()},{error:i}=await sb.from("nightscout_connections").upsert(a,{onConflict:"user_id"});return i?send(t,500,{ok:!1,error:i.message}):send(t,200,{ok:!0})}async function nsTest(e,t){const{url:r,token:n=null,api_secret:o=null}=await readBody(e);if(!r)return send(t,400,{ok:!1,error:"URL required"});const s=withToken(`${r.replace(/\/+$/,"")}/api/v1/entries.json?count=1`,n);try{const e=await fetch(s,{headers:{...apiSecretHeader(o)}}),r=e.headers.get("content-type")||"";if(!e.ok){const r=await e.text();return send(t,502,{ok:!1,error:`Nightscout error ${e.status}: ${r.slice(0,400)}`})}const n=r.includes("application/json")?await e.json():[],a=Array.isArray(n)&&n[0]?n[0]:null;return send(t,200,{ok:!0,latest:a?{sgv:a.sgv??a.mbgl??null,direction:a.direction??"-",date:a.dateString??a.date??null}:null})}catch(e){return send(t,502,{ok:!1,error:String(e.message||e)})}}async function nsSync(e,t){if(!sb)return send(t,500,{ok:!1,error:"Supabase not configured"});const r=getUserIdFromReq(e);if(!r)return send(t,401,{ok:!1,error:"No auth"});const{data:n,error:o}=await sb.from("nightscout_connections").select("url, token, api_secret").eq("user_id",r).maybeSingle();if(o)return send(t,500,{ok:!1,error:o.message});if(!n?.url)return send(t,400,{ok:!1,error:"No saved Nightscout URL"});const{sinceDays:s=14}=await readBody(e),a=Date.now()-864e5*s,i=withToken(`${n.url.replace(/\/+$/,"")}/api/v1/entries.json?find[date][$gte]=${a}&count=1000`,n.token);try{const e=await fetch(i,{headers:{...apiSecretHeader(n.api_secret)}}),o=e.headers.get("content-type")||"";if(!e.ok){const r=await e.text();return send(t,502,{ok:!1,error:`Nightscout error ${e.status}: ${r.slice(0,400)}`})}const s=o.includes("application/json")?await e.json():[];if(!Array.isArray(s)||!s.length)return send(t,200,{ok:!0,inserted:0});const a=s.map((e=>({user_id:r,device_time:e.dateString?new Date(e.dateString).toISOString():new Date(e.date).toISOString(),value_mgdl:Number(e.sgv??e.mbgl??null),trend:e.direction??null,source:"nightscout",note:null,created_at:(new Date).toISOString()}))).filter((e=>Number.isFinite(e.value_mgdl))),{error:c}=await sb.from("glucose_readings").insert(a);return c?send(t,500,{ok:!1,error:c.message}):send(t,200,{ok:!0,inserted:a.length})}catch(e){return send(t,502,{ok:!1,error:String(e.message||e)})}}export default async function handler(e,t){const r=(e.url.split("?")[0]||"").replace(/^\/api\//,"");return"OPTIONS"===e.method?send(t,200,"ok"):"nightscout/save"===r&&"POST"===e.method?nsSave(e,t):"nightscout/test"===r&&"POST"===e.method?nsTest(e,t):"nightscout/sync"===r&&"POST"===e.method?nsSync(e,t):send(t,404,{ok:!1,error:"Not found"})}