// @ts-nocheck
export default async function handler(r,t){try{if("POST"!==r.method)return t.status(405).json({ok:!1,error:"Method not allowed"});const e=r.headers.authorization||"",s=e.startsWith("Bearer ")?e.slice(7):null;if(!s)return t.status(401).json({ok:!1,error:"No auth token"});const{createClient:o}=await import("@supabase/supabase-js"),n=process.env.NEXT_PUBLIC_SUPABASE_URL,a=process.env.SUPABASE_SERVICE_ROLE_KEY;if(!n||!a)return t.status(500).json({ok:!1,error:"Missing Supabase env vars"});const u=o(n,a),{data:i,error:c}=await u.auth.getUser(s);if(c||!i?.user?.id)return t.status(401).json({ok:!1,error:"Invalid user token"});const l=i.user.id,{url:d,token:h,api_secret:p}=r.body||{};if(!d||!/^https?:\/\//i.test(d))return t.status(400).json({ok:!1,error:"Valid Nightscout URL required"});const{error:_}=await u.from("nightscout_connections").upsert({user_id:l,url:d.trim(),token:h||null,api_secret:p||null,updated_at:(new Date).toISOString()},{onConflict:"user_id"});if(_)throw _;return t.status(200).json({ok:!0})}catch(r){return console.error("[nightscout/save]",r),t.status(500).json({ok:!1,error:"Server error"})}}