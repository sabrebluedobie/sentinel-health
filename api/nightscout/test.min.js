// @ts-nocheck
import crypto from"crypto";async function readBody(t){if("GET"===t.method||"HEAD"===t.method)return{};try{return await new Promise(((e,r)=>{let o="";t.on("data",(t=>o+=t)),t.on("end",(()=>{try{e(JSON.parse(o||"{}"))}catch(t){r(t)}})),t.on("error",r)}))}catch{return{}}}export default async function handler(t,e){if("POST"===t.method)try{const{url:r,token:o,api_secret:n,count:a=3}=await readBody(t);if(!r)throw new Error("Missing url");const s=String(r).replace(/\/+$/,""),i=new URLSearchParams({count:String(a)});o&&i.set("token",o);const c=`${s}/api/v1/entries.json?${i.toString()}`,l={};!o&&n&&(l["api-secret"]=crypto.createHash("sha1").update(String(n)).digest("hex"));const d=await fetch(c,{headers:l,redirect:"follow"});if(!d.ok){const t=await d.text().catch((()=>""));throw new Error(`Nightscout error ${d.status}: ${t||d.statusText}`)}const u=await d.json(),h=(u||[]).slice(0,3).map((t=>({sgv:t.sgv??t.mgdl??null,direction:t.direction??null,time:t.dateString||(t.date?new Date(t.date).toISOString():null),time_local:t.dateString||(t.date?new Date(t.date).toLocaleString():null)})));e.status(200).json({ok:!0,count:(u||[]).length,sample:h})}catch(t){e.status(400).json({ok:!1,error:t.message||String(t)})}else e.status(405).json({ok:!1,error:"POST only"})}